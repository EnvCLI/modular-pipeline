#!/usr/bin/env bash
set -euo pipefail
ACTION_CATEGORY="swarm"
ACTION_NAME="deploy"

# common
LOCAL_PATH=${BASH_SOURCE%/*}
source "$LOCAL_PATH/pipeline-common"
source "$LOCAL_PATH/action-common-deploy"
source "$LOCAL_PATH/action-common-container"

# main
function main()
{
  # namespace
  local DEPLOYMENT_NAMESPACE=${1:-$DEPLOYMENT_NAMESPACE}
  if [ -z "$DEPLOYMENT_NAMESPACE" ]; then
    _log_message "Required attribute DEPLOYMENT_NAMESPACE missing, set via env or pass it as 1st parameter to action-swarm-deploy!" "ERROR"
    exit 1
  fi

  # deployment id
  local DEPLOYMENT_ID=${2:-$DEPLOYMENT_ID}
  if [ -z "$DEPLOYMENT_ID" ]; then
    _log_message "Required attribute DEPLOYMENT_ID missing, set via env or pass it as 2nd parameter to action-swarm-deploy!" "ERROR"
    exit 1
  fi

  # environment
  local DEPLOYMENT_ENVIRONMENT=${3:-$DEPLOYMENT_ENVIRONMENT}
  if [ -z "$DEPLOYMENT_ENVIRONMENT" ]; then
    _log_message "Required attribute DEPLOYMENT_ENVIRONMENT missing, set via env or pass it as 3rd parameter to action-swarm-deploy!" "ERROR"
    exit 1
  fi

  _log_message "deploying environment [$DEPLOYMENT_ENVIRONMENT - ID: $DEPLOYMENT_ID] ..." "INFO"
  export SWARMSTACKFILE=${SWARMSTACKFILE:-swarm.yml}

  # support for SWARMSTACKFILE_DEFAULT
  if ! test -f "$SWARMSTACKFILE"; then
    _log_message "no swarmstack file provided at [$SWARMSTACKFILE]" "DEBUG"

    if [ -z "$SWARMSTACKFILE_DEFAULT" ]; then
      _log_message "no swarmstack file provided at [$SWARMSTACKFILE] and no default set using SWARMSTACKFILE_DEFAULT!" "ERROR"
      exit 1
    else
      _log_message "using default swarmstack file provided at [$SWARMSTACKFILE] from [$SWARMSTACKFILE_DEFAULT]!" "INFO"
      curl -L -s -o "$SWARMSTACKFILE" "$SWARMSTACKFILE_DEFAULT"
      USED_DEFAULT_SWARMCONFIG=true
    fi
  fi

  # generate deployment configuration
  act-common-deploy-generate-configuration $DEPLOYMENT_ENVIRONMENT

  # configuration
  export SWARMSTACK_FILE=${SWARMSTACK_FILE:-swarm.yml}

  # container registry login (swarm passes the current registry auth to pull the image)
  act-common-container-registry-login

  # deploy stack (placeholders are replaced by the .env file provided to the stack file)
  set +e
  _run_command  docker stack deploy --compose-file $SWARMSTACK_FILE --with-registry-auth $DEPLOYMENT_ID
  deploymentResult=$?
  set -e
  if [ "$deploymentResult" -ne "0" ]; then
    _log_message "Failed to run deployment!" "ERROR"
    exit $deploymentResult
  else
    _log_message "Deployment executed succesfully!" "INFO"
  fi
}

# entrypoint
case "${1:-}" in
  help)
    echo "Deploy to a docker swarm cluster / node"
    echo ""
    echo "Environment:"
    echo "* DEBUG: Can be set to true to enable debugging"
    echo "* DEPLOYMENT_ENVIRONMENT: name of the environment (as slug, ie. production, development, ...)"
    echo "* DEPLOYMENT_ID: unique deployment id"
    echo "* SWARMSTACK_FILE: provide a custom file with a docker swarm stack definition. (defaults to swarm.yml)"
    ;;
  *)
    _log_message "Running action [$ACTION_CATEGORY.$ACTION_NAME]" "INFO"
    _prepare
    _run_hook "pre-$ACTION_CATEGORY-$ACTION_NAME"
    main "$@"
    _run_hook "post-$ACTION_CATEGORY-$ACTION_NAME"
;;
esac
