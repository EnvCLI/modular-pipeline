#!/usr/bin/env bash
set -euo pipefail

# generates the deployment configuration (.env)
function act-common-deploy-generate-configuration
{
  local DEPLOYMENT_ENVIRONMENT=${1:-}

  # source in .env configuration properties with defaults
  # - common .env file
  if [ -f ".env" ]; then
    echo "-> loading environment from .env"
    export $(grep -v '^#' .env | xargs)
  fi
  # - environment-specific .env file
  if [ -f ".env-$DEPLOYMENT_ENVIRONMENT" ]; then
    echo "-> loading environment from .env-$DEPLOYMENT_ENVIRONMENT"
    export $(grep -v '^#' ".env-$DEPLOYMENT_ENVIRONMENT" | xargs)
  fi

  # get all available variables (sourced or set)
  compgen -v > dist/tmp-deployvars.env
  readarray -t ALL_VARIABLES < dist/tmp-deployvars.env
  rm dist/tmp-deployvars.env

  # prepare deploylent labels
  # - replicas
  export DEPLOYMENT_REPLICAS=${DEPLOYMENT_REPLICAS:-1}
  # - resource limits
  export RESOURCES_SOFT_CPU=${RESOURCES_SOFT_CPU:-0.10}
  export RESOURCES_HARD_CPU=${RESOURCES_HARD_CPU:-1.00}
  export RESOURCES_SOFT_MEMORY=${RESOURCES_SOFT_MEMORY:-128M}
  export RESOURCES_HARD_MEMORY=${RESOURCES_HARD_MEMORY:-512M}

  # prepare deployment variables
  rm dist/deploy.env >> /dev/null || true # remove if already present
  for KEY in "${ALL_VARIABLES[@]}"; do
    VALUE=${!KEY:-}

    # special cases
    if [[ $KEY == "_" ]]; then
        continue
    fi
    # script vars
    if [[ $KEY =~ ^ALL_VARIABLES|KEY|VALUE|BUILD_STACK|DEPLOY_STACK|DEPLOY_TEMPLATE|KUBECONFIG_CONTENT|DISABLE_BUILD|DISABLE_PACKAGE$ ]]; then
        continue
    fi
    # gitlab variables, for feature flags FF see https://docs.gitlab.com/runner/configuration/feature-flags.html
    if [[ $KEY =~ ^FF_.*|CI|CI_.*|GITLAB_CI|GITLAB_FEATURES|GIT_SSL_NO_VERIFY|HELM_VERSION|KUBERNETES_VERSION|KUBE_INGRESS_BASE_DOMAIN|VERSION$ ]]; then
        continue
    fi
    # os vars
    if [[ $KEY =~ ^ALL_VARIABLES|KEY|VALUE|PWD|SUDO_COMMAND|LC_.*|FUNCNAME|EPOCHREALTIME|DOCKER_.*|SSH_CLIENT|SSH_CONNECTION|SSH_TTY|LESSCLOSE|WSLENV|WSL_DISTRO_NAME|XDG_DATA_DIRS|COMP_WORDBREAKS|LS_COLORS|PROMPT_COMMAND|XDG_RUNTIME_DIR|PS[0-9]|SHELL|LOGNAME|OPTERR|OPTIND|OSTYPE|PATH|SHELLOPTS|UID|USER|colors|MACHTYPE|MAIL|LESSOPEN|IFS|ID|HOSTTYPE|HOSTNAME|HOME|HIST.*|GROUPS|COLUMNS|DIRSTACK|LANG|LINES|LINENO|PPID|PIPESTATUS|RANDOM|SECONDS|SHLVL|TERM|BASH.*$ ]]; then
        continue
    fi

    # .env for deployments
    echo "$KEY=$VALUE" >> dist/deploy.env
  done
}
