#!/usr/bin/env bash
set -euo pipefail
ACTION_CATEGORY="Java"
ACTION_NAME="Build"

# common
source "${BASH_SOURCE%/*}/common-pipeline-scripts"
onPreScript

# prerequisites
which java > /dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."

# configuration
echo "-> Execute: Configuration"
ARTIFACT_DIR=${ARTIFACT_DIR:-dist}

# run tests
echo "-> Execute: Tests"
# gradle
if test -f "build.gradle"; then
  echo "-> build system detected: gradle"

  # gradle wrapper
  if test -f "gradlew"; then
    # - make the gradle wrapper executable.
    chmod +x gradle/wrapper/gradle-wrapper.jar
    
    # run build (This essentially downloads a copy of Gradle to build the project with.)
    java $JAVA_PROXY_OPTS -Dorg.gradle.appname=gradlew -classpath gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain assemble
  else
    echo "Gradle projects require the gradle wrapper to be commited into the repository! Check out https://docs.gradle.org/current/userguide/gradle_wrapper.html"
    exit 1
  fi
elif test -f "pom.xml"; then
  echo "-> build system detected: maven"

  # maven wrapper
  if test -f "mvnw"; then
    # - make the maven wrapper executable.
    chmod +x mvnw

    # run build
    ./mvnw -Dhttp.proxyHost="$PROXY_HOST" -Dhttp.proxyPort="$PROXY_PORT" -Dhttps.proxyHost="$PROXY_HOST" -Dhttps.proxyPort="$PROXY_PORT" clean package
  else
    echo "Maven projects require the maven wrapper to be commited into the repository! Check out https://www.baeldung.com/maven-wrapper"
    exit 1
  fi
else
  echo "-> Unknown Build System!"
  exit 1
fi

# copy artifacts to ARTIFACT_DIR
cp -R build/libs/* $ARTIFACT_DIR
