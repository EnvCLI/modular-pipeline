#!/usr/bin/env bash
set -euo pipefail
STAGE_NAME="package"

# common
LOCAL_PATH=${BASH_SOURCE%/*}
source "$LOCAL_PATH/pipeline-common"

# main
function main()
{
  # don't package library projects for any language
  if [[ ${PROJECT_TYPE} =~ ^.*-library$ ]]; then
    act-log-message "package can not be called for library projects, since they don't have a runtime environment that needs to be build!" "INFO"
    exit 0
  fi

  # java
  if [[ ${PROJECT_TYPE} =~ ^java-http$ ]]; then
    export DOCKERFILE_URL_DEFAULT="$MPI_RESOURCES_MIRROR/java-http.dockerfile"
    action-container-build
    exit 0
  fi

  # hugo
  if [[ ${PROJECT_TYPE} =~ ^hugo-http$ ]]; then
    export DOCKERFILE_URL_DEFAULT="$MPI_RESOURCES_MIRROR/html-http.dockerfile"
    action-container-build
    exit 0
  fi

  # no match
  act-log-message "project type ${PROJECT_TYPE} is not supported by package yet!" "WARN"
}

# entrypoint
case "${1:-}" in
  help)
    echo "Stage - Test"
    echo "Will execute test cases"
    echo ""
    echo "Environment:"
    echo "* DEBUG: Can be set to true to enable debugging"
    ;;
  *)
    _log_message "Running action [$STAGE_NAME]" "INFO"
    _prepare
    _run_hook "pre-$STAGE_NAME"
    main "$@"
    _run_hook "post-$STAGE_NAME"
;;
esac
