#!/usr/bin/env bash
set -euo pipefail
STAGE_NAME="deploy"

# common
LOCAL_PATH=${BASH_SOURCE%/*}
source "$LOCAL_PATH/pipeline-common"

# main
function main()
{
  _log_message "Will deploy using method: ${DEPLOYMENT_TYPE}" "INFO"

  # deployment target: none
  if [[ ${DEPLOYMENT_TYPE} == "none" ]]; then
    _log_message "not running deployment, no DEPLOYMENT_TYPE set!" "INFO"
    exit 0
  fi

  # deployment namespace
  local DEPLOYMENT_NAMESPACE=${1:-$DEPLOYMENT_NAMESPACE}
  if [ -z "$DEPLOYMENT_NAMESPACE" ]; then
    _log_message "no target environment specified when calling deploy stage!" "ERROR"
    exit 1
  fi

  # deployment id
  local DEPLOYMENT_ID=${2:-$DEPLOYMENT_ID}

  # deployment target
  local DEPLOYMENT_ENVIRONMENT=${3:-$DEPLOYMENT_ENVIRONMENT}
  if [ -z "$DEPLOYMENT_ENVIRONMENT" ]; then
    _log_message "no target environment specified when calling deploy stage!" "ERROR"
    exit 1
  fi

  _log_message "deploying Namespace[${DEPLOYMENT_NAMESPACE}] ID[${DEPLOYMENT_ID}] Environment[$DEPLOYMENT_ENVIRONMENT] ..." "INFO"

  # deploymentType: docker swarm
  if echo "${DEPLOYMENT_TYPE}" | grep -q 'swarm'; then
    # web based services
    if echo "${DEPLOYMENT_VARIANT}" | grep -q 'http'; then
      export SWARMSTACKFILE_DEFAULT="${DEPLOYMENT_CHART:-${MPI_RESOURCES_MIRROR}/swarm-http.yml}"
    fi

    # run deployment
    action-swarm-deploy "$DEPLOYMENT_NAMESPACE" "$DEPLOYMENT_ENVIRONMENT" "$DEPLOYMENT_ID"
    exit 0
  fi

  # deploymentType: helm
  if echo "${DEPLOYMENT_TYPE}" | grep -q 'helm'; then
    # web based services
    if echo "${DEPLOYMENT_VARIANT}" | grep -q 'http'; then
      DEPLOYMENT_CHART="${DEPLOYMENT_CHART:-philippheuer/webservice}"
    fi

    action-helm-deploy "$DEPLOYMENT_NAMESPACE" "$DEPLOYMENT_ENVIRONMENT" "$DEPLOYMENT_ID" "$DEPLOYMENT_CHART"
    exit 0
  fi

  # no match
  _log_message "deployment type ${DEPLOYMENT_TYPE} is not supported!" "ERROR"
  exit 1
}

# entrypoint
case "${1:-}" in
  help)
    echo "Stage - Deploy"
    echo "Will execute infrastructure deployments for the specified environments"
    echo ""
    echo "Environment:"
    echo "* DEBUG: Can be set to true to enable debugging"
    ;;
  *)
    _log_message "Running action [$STAGE_NAME]" "INFO"
    _prepare
    _run_hook "pre-$STAGE_NAME"
    main "$@"
    _run_hook "post-$STAGE_NAME"
;;
esac
